---
version: "3.8"

name: titanic

services:
  ml:
    build:
      context: ./ml
      dockerfile: .docker/dev/Dockerfile
    container_name: titanic_ml
    env_file:
      - .env
    ports:
      - 8501:${ML_PORT:-8501}
    volumes:
      - ./ml:/src
  api:
    build:
      context: ./api
      dockerfile: .docker/dev/Dockerfile
    container_name: titanic_api
    depends_on:
      db:
        condition: service_healthy
    env_file:
      - .env
    ports:
      - 8000:${API_PORT:-8000}
    volumes:
      - ./api:/src
  db:
    container_name: titanic_db
    env_file:
      - .env
    healthcheck:
      test: ["CMD", "pg_isready", "-U", $POSTGRES_USER]
      interval: 10s
      timeout: 3s
      retries: 5
    image: postgres:15
    volumes:
      - pgdata:/var/lib/postgres/data/
  migrate:
    command: |
      --wait up
    container_name: titanic_migrate
    depends_on:
      db:
        condition: service_healthy
    env_file:
      - .env
    image: amacneil/dbmate:2
    volumes:
      - ./db:/db
  cache:
    container_name: titanic_cache
    depends_on:
      db:
        condition: service_healthy
    env_file:
      - .env
    image: redis:7

volumes:
  pgdata:
    driver: local
